#! /bin/bash
#
# mvb -- mv back
#
# Usage:
#   mvb [<options>] <path1> <path2>
#

__mvb() {
    local opts=
    local from=
    local to=
    local in_dir=0

    while true; do
        case "$1" in
            -*)
                opts="$opts $1";
                shift ;;
            *)
                [ -z "$1" ] && break;
                from="$from $to";
                to="$1";
                shift ;;
        esac
    done

    # A lot of variation of the 'mv' command are possible, and only a subset of
    # them is revertable. For example, if the command was 'mv a b' and 'b' is a
    # directory, it can be that 'b' didn't exist before the 'mv' call and 'a'
    # was a directory. Or 'b' can be an existing directory, and 'a' was moved
    # in it.
    #
    # In the following, we assumes that if 'b' ends with a slash, it was used
    # to move 'a' _into_ 'b/', which is not true if 'b' didn't exist
    # previously.

    # if 'to' is 'foo/' and 'from' is 'qux'
    if [ "${to##*/}" == "" ]; then
        # then 'to' becomes 'foo/qux'
        in_dir=1
    fi

    for f in $from; do
        if [ $in_dir -eq 1 ]; then
            mv $opts $to${f##*/} $f;
        else
            mv $opts $to $f;
        fi
    done
}

__mvb $*
